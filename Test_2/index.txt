const express = require('express');
const cors = require('cors');
const sqlite3 = require('sqlite3').verbose();
const {v4:uuidv4} = require('uuid');

//connect to reservations.db database
const dbSource = 'reservations.db';
const db = new sqlite3.Database(dbSource);

// Set port to listen on
const HTTP_PORT = 8000;

var app = express();
app.use(cors());

//create class
class InstallationInfo {
    constructor(strName, strPrimaryColor, strAddress){
        this.name = strName;
        this.primaryColor = strPrimaryColor;
        this.address = strAddress;
    }
}

//create class instance
let objInstallInfo = new InstallationInfo("Cookeville Police", "blue", "1019 Neal Street");
console.log(objInstallInfo)

// Get all reservations
app.get('/reservations', (req, res, next) => {
    let strCommand = "SELECT * FROM tblReservations";
    db.all(strCommand, (err, row) => {
        if(err) {
            res.status(400).json({error: err.message});
            console.log(err.message);
        } else {
            res.status(200).json({message: 'Success', outcome: row});
        }
    })
})


// Delete certain reservation
app.delete('/reservations/:id', (req, res, next) => {
    let arrParams = [req.params.id];

    let strCommand = "DELETE FROM tblReservations WHERE id = ?";
    // if parameter included run command/query
    if(arrParams[0]) {
        db.run(strCommand, arrParams, (err) => {
            if(err) {
                res.status(400).json({error: err.message});
                console.log(err.message);
            } else {
                res.status(200).json({message: 'Success'});
            }
        })
    } else {
        res.status(400).json({error: 'Must provide a reservation id'});
    }
})


// Get InstallionInfo
app.get('/installinfo', (req, res, next) => {
    res.status(200).send(objInstallInfo);
})



// Listen on given port
app.listen(HTTP_PORT);
console.log(`Listening on port ${HTTP_PORT}`);